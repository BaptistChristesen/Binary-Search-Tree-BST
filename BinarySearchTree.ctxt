#BlueJ class context
comment0.target=BinarySearchTree
comment0.text=\n\ This\ BinarySearchTree\ object\ defines\ a\ reference\ based\ binary\ search\ tree\n\ \n\ @author\ \ \n\ @version\ \n
comment1.params=
comment1.target=BinarySearchTree()
comment10.params=target\ node
comment10.target=boolean\ recContains(java.lang.Comparable,\ BinaryNode)
comment11.params=
comment11.target=java.lang.String\ toString()
comment12.params=tree\ level
comment12.target=java.lang.String\ toString(BinaryNode,\ int)
comment13.params=orderType
comment13.target=java.util.Iterator\ getIterator(BSTInterface.Traversal)
comment14.params=
comment14.target=boolean\ hasNext()
comment15.params=
comment15.target=java.lang.Comparable\ next()
comment16.params=
comment16.target=void\ remove()
comment17.params=
comment17.target=java.util.List\ preorderTraverse()
comment18.params=node\ q
comment18.target=void\ preorderTraverse(BinaryNode,\ java.util.Queue)
comment19.params=
comment19.target=java.util.List\ inorderTraverse()
comment2.params=element\ element2
comment2.target=int\ compare(java.lang.Comparable,\ java.lang.Comparable)
comment20.params=node\ q
comment20.target=void\ inorderTraverse(BinaryNode,\ java.util.Queue)
comment21.params=
comment21.target=java.util.List\ postorderTraverse()
comment22.params=node\ q
comment22.target=void\ postorderTraverse(BinaryNode,\ java.util.Queue)
comment23.params=element
comment23.target=void\ remove(java.lang.Comparable)
comment24.params=target\ node
comment24.target=BinaryNode\ recRemove(java.lang.Comparable,\ BinaryNode)
comment25.params=node
comment25.target=BinaryNode\ removeNode(BinaryNode)
comment26.params=subtree
comment26.target=java.lang.Comparable\ getPredecessor(BinaryNode)
comment27.params=
comment27.target=void\ balance()
comment28.params=low\ high\ list
comment28.target=void\ refillTree(int,\ int,\ java.util.List)
comment3.params=comp
comment3.target=BinarySearchTree(java.util.Comparator)
comment4.params=
comment4.target=boolean\ isEmpty()
comment5.params=
comment5.target=int\ size()
comment6.params=tree
comment6.target=int\ size(BinaryNode)
comment7.params=element
comment7.target=void\ add(java.lang.Comparable)
comment8.params=element\ node
comment8.target=BinaryNode\ recAdd(java.lang.Comparable,\ BinaryNode)
comment9.params=element
comment9.target=boolean\ contains(java.lang.Comparable)
numComments=29
